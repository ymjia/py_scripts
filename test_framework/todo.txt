load user settings as pvpython.exe does


ReadME
====To import paraview python modules:
site-packages
*paraview
*vtk
is needed in  the python interpreter directory. (e.g. c:/python37/Lib/site-packates)

====To use pyinstaller create standalone executables:
1. paraview.vtk need to be imported to your .py scripts
2. modules
   * paraview/modules
   * paraview/pv-vtk-all.py
   * vtkmodules
   needed to be moved to directory created by pyinstaller
3. paraview plugins can be loaded dynamically by LoadPlugin() from a relative path
   3.1 to findout whether plugin is loaded, use: "XXX" in globals(), in which XXX is name of Filter/Reader... in your plugin, **watch out globals() as parameter!
   3.2 to load plugin with 3rd party dll denpendency, ensure *correct* vtkXXX.dll and 3rd party dlls in your $ENV{path}, correct means ParaView version/ debug,release configuration are compatible between plugin and vtk used to build that plugin.

=== note 0415=======
==data object in pv python
view.CameraFocalPoint is type of VectorProperty, GetData() is needed to get a list object

==add interactor with RenderView:
# define slot
def CameraKey(obj, event):
    k = obj.GetKeySym()
	print(k)

# register slot
cur_view = CreateView("RenderView")
it = cur_view.GetInteractor()
it.AddObserver("KeyPressEvent", CameraKey)
it.AddObserver("KeyPressEvent", lambda o, e, my_obj=XXX:CameraKey(o, e, my_obj))
Interact(cur_view) # start iteraction


========insight===============
about PROJECT DATA
	  1. all information needed in execution(exe, screenshot, doc) are stored in an object of class Project: _p
	  2. GUI info of project always be filled base on _p
	  3. all changes about to show in GUI must first change _p then from _p to GUI
	  ===reason===
	  1. no attention needed in GUI slots, just read from _p
	  2. GUI is not necessary, command line tool can be made easily

about PROJECT PATH -- relative path is used for exported project, absolute path is generated after load
	  1. both relative and absolute path saved in _p
	  2. GUI always show VALID absolute path
	  3. in process GUI --> _p, relative path in _p must be updated
	  4. in process _p --> GUI, absolute path is preferable to relative, unless not exists
